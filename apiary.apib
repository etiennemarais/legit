# Legit

Legit is a simple service for easy Atlas user verification via a unique user identifier.


# Code [/code]

## Sending a code [GET /code/send?phone_number=27848118111&atlas_user_id=101]

To be able to verify a user's mobile number, we need to be able to send their phone number a code 
that they can fill in to verify. This endpoint sends the code generated on the server to the user's 
phone number.

+ Parameters
    + phone_number (string, required)

        `user_mobile` of the atlas user in the format 27848118111

    + atlas_user_id (string, required)

        `user_id` of the atlas user 
            
+ Request

    + Headers
    
            X-Auth-Token: <API_KEY>
            

+ Response 200 (application/json)

        {
            "status": 200,
            "message": "Successfully sent verification code",
            "data": {
                "verification_status": "awaiting verification",
                "expires_at": {
                    "date": "2016-01-05 14:07:11.000000",
                    "timezone_type": 3,
                    "timezone": "UTC"
                }
            }
        }
 
+ Response 400 (application/json)

        {
            "status": 400,
            "message": "Missing required field (atlas_user_id|phone_number)"
        }
        
+ Response 406 (application/json)

        {
            "status": 406,
            "message": "This number is not valid",
            "data": {
                "required_format": "<required format for country>",
                "phone_number": "27848118111"
            }
        }
        
+ Response 401 (application/json)

        {
            "status": 401,
            "message": "Invalid API Key"
        }
   
## Resending a code [GET /code/resend?phone_number=27848118111&atlas_user_id=101]

Resending a code is an explicit endpoint that deals with resending a verification code and 
deals with retries and responding to failres in sending, errors and network problems. 

+ Parameters
    + phone_number (string, required)

        `user_mobile` of the atlas user in the format 27848118111

    + atlas_user_id (string, required)

        `user_id` of the atlas user
            
+ Request

    + Headers
    
            X-Auth-Token: <API_KEY>
            

+ Response 200 (application/json)

        {
            "status": 200,
            "message": "Successfully resent verification code",
            "data": {
                "verification_status": "awaiting verification",
                "expires_at": {
                    "date": "2016-01-05 14:07:11.000000",
                    "timezone_type": 3,
                    "timezone": "UTC"
                }
            }
        }
        
+ Response 400 (application/json)

        {
            "status": 400,
            "message": "Missing required field (atlas_user_id|phone_number)"
        }
        
+ Response 406 (application/json)

        {
            "status": 406,
            "message": "This number is not valid",
            "data": {
                "required_format": "<required format for country>",
                "phone_number": "27848118111"
            }
        }
        
+ Response 412 (application/json)

        {
            "status": 412,
            "message": "This number (has opted out|was delisted|etc.)",
            "data": {
                "verification_status": "failed",
                "phone_number": "27848118111"
            }
        }
        
+ Response 401 (application/json)

        {
            "status": 401,
            "message": "Invalid API Key"
        }
        
# User [/user]

## Checking if a user is verified [GET /user/check?phone_number=27848118111&atlas_user_id=101]

The app needs to be able to check if a user is verified with a phone number and this endpoint enables
the client to do that check.

+ Parameters
    + phone_number (string, required)

        `user_mobile` of the atlas user in the format 27848118111

    + atlas_user_id (string, required)

        `user_id` of the atlas user
            
+ Request

    + Headers
    
            X-Auth-Token: <API_KEY>
            

+ Response 200 (application/json)

        {
            "status": 200,
            "message": "User's phone number is verified",
            "data": {
                "atlas_user_id": "12345",
                "phone_number": "27848118111"   
            }
        }
        
+ Response 400 (application/json)

        {
            "status": 400,
            "message": "Missing required field (atlas_user_id|phone_number)"
        }
        
+ Response 403 (application/json)

        {
            "status": 403,
            "message": "User's phone number is not verified",
            "data": {
                "atlas_user_id": "12345",
                "phone_number": "27848118111"   
            }
        }
        
+ Response 406 (application/json)

        {
            "status": 406,
            "message": "This number is not valid",
            "data": {
                "required_format": "<required format for country>",
                "phone_number": "27848118111"
            }
        }

+ Response 401 (application/json)

        {
            "status": 401,
            "message": "Invalid API Key"
        }
        
## Verifying a user [PUT /user/verify]

This endpoint accepts the verification code that was sent to the user's mobile phone and does the 
action of verifying the user.


+ Request (application/json)

    + Headers
    
            X-Auth-Token: <API_KEY>
            
            
    + Body

            {
                "atlas_user_id": "12345",
                "phone_number": "27848118111",
                "verification_code": "1061"
            }
            
+ Response 200 (application/json)

        {
            "status": 200,
            "message": "User phone number verified",
            "data": {
                "atlas_user_id": "12345",
                "phone_number": "27848118111",
                "verification_status": "verified"
            }
        }
        
+ Response 400 (application/json)

        {
            "status": 400,
            "message": "Missing required field (atlas_user_id|phone_number|verification_code)"
        }
        
+ Response 406 (application/json)

        {
            "status": 406,
            "message": "This number is not valid|The code is not valid",
            "data": {
                "phone_number": "27848118111 (Formatted)"
            }
        }
        
        
+ Response 401 (application/json)

        {
            "status": 401,
            "message": "Invalid API Key"
        }
        
## Blocking a user [PUT /user/block]

This endpoint enables the moderation team or any client to block a user based on phone number.

+ Request (application/json)

    + Headers
    
            X-Auth-Token: <API_KEY>
            
            
    + Body

            {
                "atlas_user_id": "12345",
                "phone_number": "27848118111"
            }
            
+ Response 200 (application/json)

        {
            "status": 200,
            "message": "User blocked",
            "data": {
                "atlas_user_id": "12345",
                "phone_number": "27848118111"   
            }
        }
        
+ Response 400 (application/json)

        {
            "status": 400,
            "message": "Missing required field (atlas_user_id|phone_number)"
        }
        
+ Response 406 (application/json)

        {
            "status": 406,
            "message": "This number is not valid",
            "data": {
                "required_format": "<required format for country>",
                "phone_number": "27848118111"
            }
        }
        
+ Response 401 (application/json)

        {
            "status": 401,
            "message": "Invalid API Key"
        }
        
# Status [/status]

## Fetching credits available [GET /status/credits]

Returns the available credits and does the action of stating whether there is action required of 
buying new credits if the threshold is below a certain point.
            
+ Request

    + Headers
    
            X-Auth-Token: <ADMIN_API_KEY>
            
+ Response 200 (application/json)

        {
            "status": 200,
            "message": "Credits available",
            "data": {
                "credits_available": 12345   
            }
        }
        
+ Response 402 (application/json)

        {
            "status": 402,
            "message": "No credits available or below specified threshold",
            "data": {
                "credits_available": 500,
                "min_threshold": 1000
            }
        }
        
+ Response 401 (application/json)

        {
            "status": 401,
            "message": "Invalid API Key"
        }

# Data Structures

## User
+ id: 1 (number, required)
+ atlas_user_id: 1 (number, required)
+ country_id: 1 (number, required)
+ phone_number: 27848118111 (string, required)
+ verification_status: `unverified, awaiting verification, verified, blocked, failed` (enum, required)

## Code
+ id: 1 (number, required)
+ user_id: 1 (number, required)
+ code: 1834 (string, required)
+ created_at: 2015-07-29 14:07:11 (date)
+ expired_at: 2015-07-29 14:07:11 (date)

## Country
+ id: 1 (number, required)
+ country_code: `olxtz, olxug, olxgh, olxke, olxng, olxza` (enum, required)
+ api_key: someHashHere (string, required)
+ status: `enabled, disabled` (enum)

## Queue

## Error
+ id: 1 (number, required)
+ user_id: 1 (number, required)
+ phone_number: 27848118111 (string, required)
+ error_message: `Some error message for debug purposes` (string, required)
+ created_at: 2015-07-29 14:07:11 (date)
+ deleted_at: 2015-07-29 14:07:11 (date)

## Log
+ id: 1 (number, required)
+ request: `Some request details for debug` (string, required)
+ response: `Some response details for debug` (string, required)
+ created_at: 2015-07-29 14:07:11 (date)
+ updated_at: 2015-07-29 14:07:11 (date)