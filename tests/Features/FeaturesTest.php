<?php

/**
 * Generated by OutlineTestGenerator on 2016-02-05 at 10:02:10.
 */
class FeaturesTest extends TestCase
{

    public function testPost_Sending_a_code_Returns_200()
    {
        $call = $this->post("/code/send", array ( 'client_user_id' => '12345', 'phone_number' => '27848118111', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'verification_status', 'expires_at', 'expires_at' => array ( 'date', 'timezone_type', 'timezone', ), ), ));
        $call->assertResponseStatus(200);
    }

    public function testPost_Sending_a_code_Returns_400()
    {
        $call = $this->post("/code/send", array ( 'phone_number' => '27848118111', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', ));
        $call->assertResponseStatus(400);
    }

    public function testPost_Sending_a_code_Returns_401()
    {
        $call = $this->post("/code/send", [], array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token WrongApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', ));
        $call->assertResponseStatus(401);
    }

    public function testPost_Sending_a_code_Returns_406()
    {
        $call = $this->post("/code/send", array ( 'client_user_id' => '12345', 'phone_number' => 'someBadNumber', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'required_format', ), ));
        $call->assertResponseStatus(406);
    }

    public function testPost_Resending_a_code_Returns_200()
    {
        $call = $this->post("/code/resend", array ( 'client_user_id' => '12345', 'phone_number' => '27848118111', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'verification_status', 'expires_at', 'expires_at' => array ( 'date', 'timezone_type', 'timezone', ), ), ));
        $call->assertResponseStatus(200);
    }

    public function testPost_Resending_a_code_Returns_400()
    {
        $call = $this->post("/code/resend", array ( 'phone_number' => '27848118111', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', ));
        $call->assertResponseStatus(400);
    }

    public function testPost_Resending_a_code_Returns_401()
    {
        $call = $this->post("/code/resend", [], array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token WrongApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', ));
        $call->assertResponseStatus(401);
    }

    public function testPost_Resending_a_code_Returns_406()
    {
        $call = $this->post("/code/resend", array ( 'client_user_id' => '12345', 'phone_number' => 'someBadNumber', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'required_format', ), ));
        $call->assertResponseStatus(406);
    }

    public function testPost_Resending_a_code_Returns_412()
    {
        $call = $this->post("/code/resend", array ( 'client_user_id' => '12345', 'phone_number' => '27848118111', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'verification_status', 'phone_number', ), ));
        $call->assertResponseStatus(412);
    }

    public function testGet_Verification_check_Returns_200()
    {
        $call = $this->get("/verification/check?phone_number={phone_number}&client_user_id={client_user_id}", array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'client_user_id', 'phone_number', ), ));
        $call->assertResponseStatus(200);
    }

    public function testGet_Verification_check_Returns_400()
    {
        $call = $this->get("/verification/check?phone_number={phone_number}&client_user_id={client_user_id}", array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', ));
        $call->assertResponseStatus(400);
    }

    public function testGet_Verification_check_Returns_401()
    {
        $call = $this->get("/verification/check?phone_number={phone_number}&client_user_id={client_user_id}", array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token WrongApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', ));
        $call->assertResponseStatus(401);
    }

    public function testGet_Verification_check_Returns_403()
    {
        $call = $this->get("/verification/check?phone_number={phone_number}&client_user_id={client_user_id}", array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'client_user_id', 'phone_number', ), ));
        $call->assertResponseStatus(403);
    }

    public function testGet_Verification_check_Returns_406()
    {
        $call = $this->get("/verification/check?phone_number={phone_number}&client_user_id={client_user_id}", array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'required_format', 'phone_number', ), ));
        $call->assertResponseStatus(406);
    }

    public function testPut_Verifying_a_phone_number_Returns_200()
    {
        $call = $this->put("/verification/verify", array ( 'client_user_id' => '12345', 'phone_number' => '27848118111', 'verification_code' => '1061', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'client_user_id', 'phone_number', 'verification_status', ), ));
        $call->assertResponseStatus(200);
    }

    public function testPut_Verifying_a_phone_number_Returns_400()
    {
        $call = $this->put("/verification/verify", array ( 'phone_number' => '27848118111', 'verification_code' => '1061', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', ));
        $call->assertResponseStatus(400);
    }

    public function testPut_Verifying_a_phone_number_Returns_401()
    {
        $call = $this->put("/verification/verify", [], array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token WrongApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', ));
        $call->assertResponseStatus(401);
    }

    public function testPut_Verifying_a_phone_number_Returns_404()
    {
        $call = $this->put("/verification/verify", array ( 'client_user_id' => '12345', 'phone_number' => '27848118111', 'verification_code' => '1061', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'source', 'message', 'error', 'error' => array ( 'code', 'message', ), ), ));
        $call->assertResponseStatus(404);
    }

    public function testPut_Verifying_a_phone_number_Returns_406()
    {
        $call = $this->put("/verification/verify", array ( 'client_user_id' => '12345', 'phone_number' => 'badNumber', 'verification_code' => 'badCode', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'phone_number', ), ));
        $call->assertResponseStatus(406);
    }

    public function testPut_Blocking_a_phone_number_Returns_200()
    {
        $call = $this->put("/verification/block", array ( 'client_user_id' => '12345', 'phone_number' => '27848118111', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'client_user_id', 'phone_number', ), ));
        $call->assertResponseStatus(200);
    }

    public function testPut_Blocking_a_phone_number_Returns_400()
    {
        $call = $this->put("/verification/block", array ( 'phone_number' => '27848118111', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', ));
        $call->assertResponseStatus(400);
    }

    public function testPut_Blocking_a_phone_number_Returns_401()
    {
        $call = $this->put("/verification/block", [], array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token WrongApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', ));
        $call->assertResponseStatus(401);
    }

    public function testPut_Blocking_a_phone_number_Returns_406()
    {
        $call = $this->put("/verification/block", array ( 'client_user_id' => '12345', 'phone_number' => 'badNumber', 'verification_code' => 'badCode', ), array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token TestApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'phone_number', ), ));
        $call->assertResponseStatus(406);
    }

    public function testGet_Fetching_credits_available_Returns_200()
    {
        $call = $this->get("/status/credits", array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token AdminApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'credits_available', ), ));
        $call->assertResponseStatus(200);
    }

    public function testGet_Fetching_credits_available_Returns_401()
    {
        $call = $this->get("/status/credits", array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token WrongAdminApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', ));
        $call->assertResponseStatus(401);
    }

    public function testGet_Fetching_credits_available_Returns_402()
    {
        $call = $this->get("/status/credits", array ( 'Content-Type' => 'application/json', 'Authorization' => 'Token AdminApiKey1234', ));
        $call->seeJsonStructure(array ( 'status', 'message', 'data', 'data' => array ( 'credits_available', 'min_threshold', ), ));
        $call->assertResponseStatus(402);
    }

}
